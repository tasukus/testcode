#include <random>
#include <functional>
#include <algorithm>
#include <time.h>
#include <Windows.h>
#include <tchar.h>
#include <Shlobj.h>
#pragma comment(lib,"Shell32.lib")

typedef std::basic_string<TCHAR> tstring;


struct rnd_gen {
	rnd_gen(TCHAR const* range = TEXT("abcdefghij klm`nopqr&'=-@stuvwxyz+$#()!0123456789") )
		: range(range), len(_tcslen(range)) {
	}

	TCHAR operator ()() const {
		return range[static_cast<std::size_t>(std::rand() * (1.0 / (RAND_MAX + 1.0 )) * len)];
	}
private:
	TCHAR const* range;
	std::size_t len;
};
std::vector< tstring > namelist;

int generate(const int depethcount,int mydepeth,const tstring& orgname)
{
	const tstring  dem=TEXT("\\");

	for(int i=0;i<1024;i++)
	{
		int len = (int)(std::rand() * (1.0 / (RAND_MAX + 1.0 ))*60);
		tstring s;
		std::generate_n(std::back_inserter(s), len, rnd_gen());

		tstring myvalue = orgname;
		myvalue +=dem;
		myvalue +=s;

		do{
			if(depethcount > mydepeth)
			{
				int doloop = (int)(std::rand() * (1.0 / (RAND_MAX + 1.0 ))*2);
				if( doloop == 1 ){
					generate(depethcount,mydepeth+1,myvalue);
					break;
				}
			}
			if( myvalue.size() >= 248) {
				myvalue.resize(248);
			}
	//		namelist.push_back(myvalue);
			_tprintf(TEXT("%s\n"),myvalue.c_str());
			SHCreateDirectoryEx(NULL,orgname.c_str(),NULL);
			//------------------------
			HANDLE hFile = CreateFile(myvalue.c_str() , GENERIC_READ , 0 , NULL ,CREATE_NEW , FILE_ATTRIBUTE_NORMAL , NULL);
			CloseHandle(hFile);
		}while(false);
	}
	return 0;
}

int wmain(int argc, TCHAR *argv[ ] )
{
	srand(time(0));

	int maxdepeth = (int)(std::rand() * (1.0 / (RAND_MAX + 1.0 ))*10);

	tstring fullpathfilename;
	fullpathfilename =argv[1];

	generate(maxdepeth,1,fullpathfilename);

	return 0;
}
